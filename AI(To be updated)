#include <iostream>
#include <stdlib.h>
#include <ctime>

using namespace std;

const int PERM_LEN = 5;

struct permutation {
    unsigned short digit[PERM_LEN];
    bool digit_used[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    bool isValid = 0;
};

permutation RandomPermutationGenerator(permutation &p)
{
    srand(time(NULL));
    int CurrentDigit;
    int firstDigit = rand() % 9+1;
    p.digit_used[firstDigit]++;
    p.digit[0]=firstDigit;
    //cout<<"First digit is "<<firstDigit<<endl;
    int i = 1;
    bool ok = false;
    do{
            //cout<<"Creating the digits \n";
        do{
            ok = false;
            CurrentDigit = rand()%10;
            //cout<<CurrentDigit<<endl;
            if(p.digit_used[CurrentDigit]==0)
                {
                    //cout<<"Found a good digit, moving to the next one \n";
                    p.digit_used[CurrentDigit]++;
                    p.digit[i]=CurrentDigit;
                    ok = true;
                }
            //else cout<<CurrentDigit<<" was already used before, retrying... \n";
        } while(not ok);
        i++;
    } while(i<5);
    //cout<<"Found a 5 digit number, printing it... \n";
    p.isValid = 1;
    return p;
}

int main()
{
    permutation DefaultPerm;
    DefaultPerm=RandomPermutationGenerator(DefaultPerm);
    for(int i=0;i<5;i++)
        cout<<DefaultPerm.digit[i];
    return 0;
}
